package com.ra.course.aws.online.shopping.dao;

import com.ra.course.aws.online.shopping.dao.impl.CreditCardDaoImpl;
import com.ra.course.aws.online.shopping.entity.Address;
import com.ra.course.aws.online.shopping.entity.payment.CreditCard;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.springframework.jdbc.core.JdbcTemplate;

import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.mockito.ArgumentMatchers.*;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;
import static org.mockito.Mockito.verify;

public class CreditCardDaoImplMockTest {

    private CreditCardDao creditCardDao;
    private final JdbcTemplate jdbcTemplate = mock(JdbcTemplate.class);

    @BeforeEach
    void setUp() {
        creditCardDao = new CreditCardDaoImpl(jdbcTemplate);
    }

    @Test
    @DisplayName("Should insert account into DB an return autogenerated ID")
    public void saveTest() {
        Long accountId = 1L;
        Long billingAddressId = 2L;
        Address address = new Address("Bohatyrska", "Lviv", "Lviv", "11111", "Ukraine1");
        CreditCard card = new CreditCard("Roger", "5525694123698541", 145, address);

        when(jdbcTemplate.update(anyString(), eq(card.getNameOnCard()), eq(card.getCardNumber()), eq(card.getCode()),
                eq(billingAddressId.intValue()), eq(accountId.intValue()))).thenReturn(1);

        assertTrue(creditCardDao.save(accountId, card, billingAddressId));
    }

    @Test
    public void removeTest() {
        assertTrue(creditCardDao.remove("000000"));
        verify(jdbcTemplate).update(any(), eq("000000"));
    }
}