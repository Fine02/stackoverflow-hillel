/*
 * This file is generated by jOOQ.
 */
package com.ra.course.com.stackoverflow.entity.jooq.tables;


import com.ra.course.com.stackoverflow.entity.jooq.Keys;
import com.ra.course.com.stackoverflow.entity.jooq.Public;
import com.ra.course.com.stackoverflow.entity.jooq.tables.records.BountyRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BountyTable extends TableImpl<BountyRecord> {

    private static final long serialVersionUID = -410567156;

    /**
     * The reference instance of <code>public.bounty</code>
     */
    public static final BountyTable BOUNTY_TABLE = new BountyTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BountyRecord> getRecordType() {
        return BountyRecord.class;
    }

    /**
     * The column <code>public.bounty.id</code>.
     */
    public final TableField<BountyRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('bounty_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.bounty.reputation</code>.
     */
    public final TableField<BountyRecord, Integer> REPUTATION = createField(DSL.name("reputation"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.bounty.expiry</code>.
     */
    public final TableField<BountyRecord, LocalDateTime> EXPIRY = createField(DSL.name("expiry"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.bounty.creator_id</code>.
     */
    public final TableField<BountyRecord, Long> CREATOR_ID = createField(DSL.name("creator_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>public.bounty</code> table reference
     */
    public BountyTable() {
        this(DSL.name("bounty"), null);
    }

    /**
     * Create an aliased <code>public.bounty</code> table reference
     */
    public BountyTable(String alias) {
        this(DSL.name(alias), BOUNTY_TABLE);
    }

    /**
     * Create an aliased <code>public.bounty</code> table reference
     */
    public BountyTable(Name alias) {
        this(alias, BOUNTY_TABLE);
    }

    private BountyTable(Name alias, Table<BountyRecord> aliased) {
        this(alias, aliased, null);
    }

    private BountyTable(Name alias, Table<BountyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> BountyTable(Table<O> child, ForeignKey<O, BountyRecord> key) {
        super(child, key, BOUNTY_TABLE);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<BountyRecord, Long> getIdentity() {
        return Keys.IDENTITY_BOUNTY;
    }

    @Override
    public UniqueKey<BountyRecord> getPrimaryKey() {
        return Keys.BOUNTY_PKEY;
    }

    @Override
    public List<UniqueKey<BountyRecord>> getKeys() {
        return Arrays.<UniqueKey<BountyRecord>>asList(Keys.BOUNTY_PKEY);
    }

    @Override
    public List<ForeignKey<BountyRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<BountyRecord, ?>>asList(Keys.BOUNTY__FK_CREATOR_ID);
    }

    public MemberTable member() {
        return new MemberTable(this, Keys.BOUNTY__FK_CREATOR_ID);
    }

    @Override
    public BountyTable as(String alias) {
        return new BountyTable(DSL.name(alias), this);
    }

    @Override
    public BountyTable as(Name alias) {
        return new BountyTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BountyTable rename(String name) {
        return new BountyTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BountyTable rename(Name name) {
        return new BountyTable(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Integer, LocalDateTime, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
