/*
 * This file is generated by jOOQ.
 */
package com.ra.course.com.stackoverflow.entity.jooq.tables;


import com.ra.course.com.stackoverflow.entity.jooq.Indexes;
import com.ra.course.com.stackoverflow.entity.jooq.Keys;
import com.ra.course.com.stackoverflow.entity.jooq.Public;
import com.ra.course.com.stackoverflow.entity.jooq.tables.records.BountyRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.processing.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BountyTable extends TableImpl<BountyRecord> {

    private static final long serialVersionUID = -2144393609;

    /**
     * The reference instance of <code>public.bounty</code>
     */
    public static final BountyTable BOUNTY_TABLE = new BountyTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BountyRecord> getRecordType() {
        return BountyRecord.class;
    }

    /**
     * The column <code>public.bounty.id</code>.
     */
    public static final TableField<BountyRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('bounty_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), BOUNTY_TABLE, "");

    /**
     * The column <code>public.bounty.reputation</code>.
     */
    public static final TableField<BountyRecord, Integer> REPUTATION = createField(DSL.name("reputation"), org.jooq.impl.SQLDataType.INTEGER, BOUNTY_TABLE, "");

    /**
     * The column <code>public.bounty.expiry</code>.
     */
    public static final TableField<BountyRecord, Timestamp> EXPIRY = createField(DSL.name("expiry"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), BOUNTY_TABLE, "");

    /**
     * The column <code>public.bounty.creator_id</code>.
     */
    public static final TableField<BountyRecord, Long> CREATOR_ID = createField(DSL.name("creator_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), BOUNTY_TABLE, "");

    /**
     * No further instances allowed
     */
    private BountyTable() {
        this(DSL.name("bounty"), null);
    }

    private BountyTable(Name alias, Table<BountyRecord> aliased) {
        this(alias, aliased, null);
    }

    private BountyTable(Name alias, Table<BountyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> BountyTable(Table<O> child, ForeignKey<O, BountyRecord> key) {
        super(child, key, BOUNTY_TABLE);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BOUNTY_PKEY);
    }

    @Override
    public Identity<BountyRecord, Long> getIdentity() {
        return Keys.IDENTITY_BOUNTY;
    }

    @Override
    public UniqueKey<BountyRecord> getPrimaryKey() {
        return Keys.BOUNTY_PKEY;
    }

    @Override
    public List<UniqueKey<BountyRecord>> getKeys() {
        return Arrays.<UniqueKey<BountyRecord>>asList(Keys.BOUNTY_PKEY);
    }

    @Override
    public List<ForeignKey<BountyRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<BountyRecord, ?>>asList(Keys.BOUNTY__FK_CREATOR_ID);
    }

    public AccountTable account() {
        return new AccountTable(this, Keys.BOUNTY__FK_CREATOR_ID);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Integer, Timestamp, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
